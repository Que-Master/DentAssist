// <auto-generated />
using System;
using DentAssist.Models.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DentAssist.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DentAssist.Models.Entities.HistorialTratamiento", b =>
                {
                    b.Property<Guid>("IdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaRealizada")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdOdontologo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdPasoTratamiento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTratamiento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdHistorial");

                    b.HasIndex("IdOdontologo");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("IdPasoTratamiento");

                    b.HasIndex("IdTratamiento");

                    b.ToTable("HistorialTratamientos");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.Odontologo", b =>
                {
                    b.Property<Guid>("IdOdontologo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdOdontologo");

                    b.ToTable("Odontologos");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.Paciente", b =>
                {
                    b.Property<Guid>("IdPaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RUT")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdPaciente");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.PasoTratamiento", b =>
                {
                    b.Property<Guid>("IdPaso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("FechaEstimada")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdPlan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTratamiento")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdPaso");

                    b.HasIndex("IdPlan");

                    b.HasIndex("IdTratamiento");

                    b.ToTable("PasoTratamientos");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.PlanTratamiento", b =>
                {
                    b.Property<Guid>("IdPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdOdontologo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observaciones")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdPlan");

                    b.HasIndex("IdOdontologo");

                    b.HasIndex("IdPaciente");

                    b.ToTable("PlanTratamientos");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.Recepcionista", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recepcionistas");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.Tratamiento", b =>
                {
                    b.Property<Guid>("IdTratamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("PrecioEstimado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdTratamiento");

                    b.ToTable("Tratamientos");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.Turno", b =>
                {
                    b.Property<Guid>("IdTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DuracionMinutos")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaHora")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdOdontologo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdPaciente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RecepcionistaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdTurno");

                    b.HasIndex("IdOdontologo");

                    b.HasIndex("IdPaciente");

                    b.HasIndex("RecepcionistaId");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.HistorialTratamiento", b =>
                {
                    b.HasOne("DentAssist.Models.Entities.Odontologo", "Odontologo")
                        .WithMany("Historiales")
                        .HasForeignKey("IdOdontologo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DentAssist.Models.Entities.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DentAssist.Models.Entities.PasoTratamiento", "PasoTratamiento")
                        .WithMany()
                        .HasForeignKey("IdPasoTratamiento");

                    b.HasOne("DentAssist.Models.Entities.Tratamiento", "Tratamiento")
                        .WithMany("Historiales")
                        .HasForeignKey("IdTratamiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Odontologo");

                    b.Navigation("Paciente");

                    b.Navigation("PasoTratamiento");

                    b.Navigation("Tratamiento");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.PasoTratamiento", b =>
                {
                    b.HasOne("DentAssist.Models.Entities.PlanTratamiento", "Plan")
                        .WithMany("Pasos")
                        .HasForeignKey("IdPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DentAssist.Models.Entities.Tratamiento", "Tratamiento")
                        .WithMany("Pasos")
                        .HasForeignKey("IdTratamiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("Tratamiento");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.PlanTratamiento", b =>
                {
                    b.HasOne("DentAssist.Models.Entities.Odontologo", "Odontologo")
                        .WithMany("Planes")
                        .HasForeignKey("IdOdontologo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DentAssist.Models.Entities.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Odontologo");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.Turno", b =>
                {
                    b.HasOne("DentAssist.Models.Entities.Odontologo", "Odontologo")
                        .WithMany("Turnos")
                        .HasForeignKey("IdOdontologo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DentAssist.Models.Entities.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("IdPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DentAssist.Models.Entities.Recepcionista", null)
                        .WithMany("TurnosAgendados")
                        .HasForeignKey("RecepcionistaId");

                    b.Navigation("Odontologo");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.Odontologo", b =>
                {
                    b.Navigation("Historiales");

                    b.Navigation("Planes");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.PlanTratamiento", b =>
                {
                    b.Navigation("Pasos");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.Recepcionista", b =>
                {
                    b.Navigation("TurnosAgendados");
                });

            modelBuilder.Entity("DentAssist.Models.Entities.Tratamiento", b =>
                {
                    b.Navigation("Historiales");

                    b.Navigation("Pasos");
                });
#pragma warning restore 612, 618
        }
    }
}
